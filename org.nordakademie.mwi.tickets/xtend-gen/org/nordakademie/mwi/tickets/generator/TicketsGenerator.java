/**
 * generated by Xtext
 */
package org.nordakademie.mwi.tickets.generator;

import com.google.common.collect.Iterables;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.generator.IGenerator;
import org.eclipse.xtext.xbase.lib.IterableExtensions;
import org.eclipse.xtext.xbase.lib.StringExtensions;
import org.nordakademie.mwi.tickets.TicketsOutputConfigurationProvider;
import org.nordakademie.mwi.tickets.generator.DomainGenerator;
import org.nordakademie.mwi.tickets.generator.JspGenerator;
import org.nordakademie.mwi.tickets.tickets.TicketCategory;
import org.nordakademie.mwi.tickets.tickets.TicketSystem;

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
@SuppressWarnings("all")
public class TicketsGenerator implements IGenerator {
  public void doGenerate(final Resource resource, final IFileSystemAccess fsa) {
    EList<EObject> _contents = resource.getContents();
    Iterable<TicketSystem> _filter = Iterables.<TicketSystem>filter(_contents, TicketSystem.class);
    TicketSystem _head = IterableExtensions.<TicketSystem>head(_filter);
    EList<TicketCategory> categories = _head.getCategories();
    for (final TicketCategory category : categories) {
      {
        String _name = category.getName();
        String _firstUpper = StringExtensions.toFirstUpper(_name);
        String _plus = ("org/nordakademie/mwi/ticketExample/domain/" + _firstUpper);
        String _plus_1 = (_plus + ".java");
        CharSequence _domainObject = DomainGenerator.toDomainObject(category);
        fsa.generateFile(_plus_1, _domainObject);
        String _name_1 = category.getName();
        String _lowerCase = _name_1.toLowerCase();
        String _plus_2 = (_lowerCase + "/create.jsp");
        CharSequence _createJsp = JspGenerator.toCreateJsp(category);
        fsa.generateFile(_plus_2, TicketsOutputConfigurationProvider.JSP_OUTPUT, _createJsp);
      }
    }
    CharSequence _navigation = JspGenerator.toNavigation(categories);
    fsa.generateFile("/navigation.jspf", TicketsOutputConfigurationProvider.JSP_OUTPUT, _navigation);
  }
}
