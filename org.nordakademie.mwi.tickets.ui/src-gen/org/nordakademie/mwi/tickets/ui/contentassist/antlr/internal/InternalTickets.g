/*
* generated by Xtext
*/
grammar InternalTickets;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.nordakademie.mwi.tickets.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.nordakademie.mwi.tickets.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.nordakademie.mwi.tickets.services.TicketsGrammarAccess;

}

@parser::members {
 
 	private TicketsGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(TicketsGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleTicketSystem
entryRuleTicketSystem 
:
{ before(grammarAccess.getTicketSystemRule()); }
	 ruleTicketSystem
{ after(grammarAccess.getTicketSystemRule()); } 
	 EOF 
;

// Rule TicketSystem
ruleTicketSystem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTicketSystemAccess().getAlternatives()); }
(rule__TicketSystem__Alternatives)*
{ after(grammarAccess.getTicketSystemAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getGroup()); }
(rule__State__Group__0)
{ after(grammarAccess.getStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFlow
entryRuleFlow 
:
{ before(grammarAccess.getFlowRule()); }
	 ruleFlow
{ after(grammarAccess.getFlowRule()); } 
	 EOF 
;

// Rule Flow
ruleFlow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFlowAccess().getGroup()); }
(rule__Flow__Group__0)
{ after(grammarAccess.getFlowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleField
entryRuleField 
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldAccess().getGroup()); }
(rule__Field__Group__0)
{ after(grammarAccess.getFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnum
entryRuleEnum 
:
{ before(grammarAccess.getEnumRule()); }
	 ruleEnum
{ after(grammarAccess.getEnumRule()); } 
	 EOF 
;

// Rule Enum
ruleEnum
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumAccess().getGroup()); }
(rule__Enum__Group__0)
{ after(grammarAccess.getEnumAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTicketCategory
entryRuleTicketCategory 
:
{ before(grammarAccess.getTicketCategoryRule()); }
	 ruleTicketCategory
{ after(grammarAccess.getTicketCategoryRule()); } 
	 EOF 
;

// Rule TicketCategory
ruleTicketCategory
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTicketCategoryAccess().getGroup()); }
(rule__TicketCategory__Group__0)
{ after(grammarAccess.getTicketCategoryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTicketField
entryRuleTicketField 
:
{ before(grammarAccess.getTicketFieldRule()); }
	 ruleTicketField
{ after(grammarAccess.getTicketFieldRule()); } 
	 EOF 
;

// Rule TicketField
ruleTicketField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTicketFieldAccess().getGroup()); }
(rule__TicketField__Group__0)
{ after(grammarAccess.getTicketFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRole
entryRuleRole 
:
{ before(grammarAccess.getRoleRule()); }
	 ruleRole
{ after(grammarAccess.getRoleRule()); } 
	 EOF 
;

// Rule Role
ruleRole
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRoleAccess().getGroup()); }
(rule__Role__Group__0)
{ after(grammarAccess.getRoleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRolePermission
entryRuleRolePermission 
:
{ before(grammarAccess.getRolePermissionRule()); }
	 ruleRolePermission
{ after(grammarAccess.getRolePermissionRule()); } 
	 EOF 
;

// Rule RolePermission
ruleRolePermission
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRolePermissionAccess().getGroup()); }
(rule__RolePermission__Group__0)
{ after(grammarAccess.getRolePermissionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Permission
rulePermission
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPermissionAccess().getAlternatives()); }
(rule__Permission__Alternatives)
{ after(grammarAccess.getPermissionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule FieldType
ruleFieldType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldTypeAccess().getAlternatives()); }
(rule__FieldType__Alternatives)
{ after(grammarAccess.getFieldTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__TicketSystem__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketSystemAccess().getStatesAssignment_0()); }
(rule__TicketSystem__StatesAssignment_0)
{ after(grammarAccess.getTicketSystemAccess().getStatesAssignment_0()); }
)

    |(
{ before(grammarAccess.getTicketSystemAccess().getFlowsAssignment_1()); }
(rule__TicketSystem__FlowsAssignment_1)
{ after(grammarAccess.getTicketSystemAccess().getFlowsAssignment_1()); }
)

    |(
{ before(grammarAccess.getTicketSystemAccess().getFieldsAssignment_2()); }
(rule__TicketSystem__FieldsAssignment_2)
{ after(grammarAccess.getTicketSystemAccess().getFieldsAssignment_2()); }
)

    |(
{ before(grammarAccess.getTicketSystemAccess().getCategoriesAssignment_3()); }
(rule__TicketSystem__CategoriesAssignment_3)
{ after(grammarAccess.getTicketSystemAccess().getCategoriesAssignment_3()); }
)

    |(
{ before(grammarAccess.getTicketSystemAccess().getRolesAssignment_4()); }
(rule__TicketSystem__RolesAssignment_4)
{ after(grammarAccess.getTicketSystemAccess().getRolesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getFieldTypeAssignment_3_0()); }
(rule__Field__FieldTypeAssignment_3_0)
{ after(grammarAccess.getFieldAccess().getFieldTypeAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getFieldAccess().getFieldEnumAssignment_3_1()); }
(rule__Field__FieldEnumAssignment_3_1)
{ after(grammarAccess.getFieldAccess().getFieldEnumAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Permission__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPermissionAccess().getCreateEnumLiteralDeclaration_0()); }
(	'create' 
)
{ after(grammarAccess.getPermissionAccess().getCreateEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPermissionAccess().getReadEnumLiteralDeclaration_1()); }
(	'read' 
)
{ after(grammarAccess.getPermissionAccess().getReadEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getPermissionAccess().getModifyEnumLiteralDeclaration_2()); }
(	'modify' 
)
{ after(grammarAccess.getPermissionAccess().getModifyEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getPermissionAccess().getDeleteEnumLiteralDeclaration_3()); }
(	'delete' 
)
{ after(grammarAccess.getPermissionAccess().getDeleteEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldTypeAccess().getUserEnumLiteralDeclaration_0()); }
(	'user' 
)
{ after(grammarAccess.getFieldTypeAccess().getUserEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getFieldTypeAccess().getStringEnumLiteralDeclaration_1()); }
(	'String' 
)
{ after(grammarAccess.getFieldTypeAccess().getStringEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getFieldTypeAccess().getDateEnumLiteralDeclaration_2()); }
(	'Date' 
)
{ after(grammarAccess.getFieldTypeAccess().getDateEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getFieldTypeAccess().getDateTimeEnumLiteralDeclaration_3()); }
(	'dateTime' 
)
{ after(grammarAccess.getFieldTypeAccess().getDateTimeEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getFieldTypeAccess().getIntEnumLiteralDeclaration_4()); }
(	'int' 
)
{ after(grammarAccess.getFieldTypeAccess().getIntEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getFieldTypeAccess().getDecimalEnumLiteralDeclaration_5()); }
(	'decimal' 
)
{ after(grammarAccess.getFieldTypeAccess().getDecimalEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__State__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStateKeyword_0()); }

	'state' 

{ after(grammarAccess.getStateAccess().getStateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameAssignment_1()); }
(rule__State__NameAssignment_1)
{ after(grammarAccess.getStateAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getDescriptionAssignment_2()); }
(rule__State__DescriptionAssignment_2)
{ after(grammarAccess.getStateAccess().getDescriptionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getStateAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Flow__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow__Group__0__Impl
	rule__Flow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getFlowKeyword_0()); }

	'flow' 

{ after(grammarAccess.getFlowAccess().getFlowKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow__Group__1__Impl
	rule__Flow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getNameAssignment_1()); }
(rule__Flow__NameAssignment_1)
{ after(grammarAccess.getFlowAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow__Group__2__Impl
	rule__Flow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getFlowAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow__Group__3__Impl
	rule__Flow__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getStatesAssignment_3()); }
(rule__Flow__StatesAssignment_3)
{ after(grammarAccess.getFlowAccess().getStatesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow__Group__4__Impl
	rule__Flow__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getGroup_4()); }
(rule__Flow__Group_4__0)*
{ after(grammarAccess.getFlowAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow__Group__5__Impl
	rule__Flow__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getFlowAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getFlowAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Flow__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow__Group_4__0__Impl
	rule__Flow__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getFlowAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getStatesAssignment_4_1()); }
(rule__Flow__StatesAssignment_4_1)
{ after(grammarAccess.getFlowAccess().getStatesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Field__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getFieldKeyword_0()); }

	'field' 

{ after(grammarAccess.getFieldAccess().getFieldKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameAssignment_1()); }
(rule__Field__NameAssignment_1)
{ after(grammarAccess.getFieldAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__2__Impl
	rule__Field__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getLabelAssignment_2()); }
(rule__Field__LabelAssignment_2)
{ after(grammarAccess.getFieldAccess().getLabelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__3__Impl
	rule__Field__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getAlternatives_3()); }
(rule__Field__Alternatives_3)
{ after(grammarAccess.getFieldAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getFieldAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Enum__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__0__Impl
	rule__Enum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getOptionAssignment_0()); }
(rule__Enum__OptionAssignment_0)
{ after(grammarAccess.getEnumAccess().getOptionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getGroup_1()); }
(rule__Enum__Group_1__0)*
{ after(grammarAccess.getEnumAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Enum__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group_1__0__Impl
	rule__Enum__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getEnumAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getOptionAssignment_1_1()); }
(rule__Enum__OptionAssignment_1_1)
{ after(grammarAccess.getEnumAccess().getOptionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TicketCategory__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TicketCategory__Group__0__Impl
	rule__TicketCategory__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TicketCategory__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketCategoryAccess().getTicketCategoryKeyword_0()); }

	'ticketCategory' 

{ after(grammarAccess.getTicketCategoryAccess().getTicketCategoryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TicketCategory__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TicketCategory__Group__1__Impl
	rule__TicketCategory__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TicketCategory__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketCategoryAccess().getNameAssignment_1()); }
(rule__TicketCategory__NameAssignment_1)
{ after(grammarAccess.getTicketCategoryAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TicketCategory__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TicketCategory__Group__2__Impl
	rule__TicketCategory__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TicketCategory__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketCategoryAccess().getDescriptionAssignment_2()); }
(rule__TicketCategory__DescriptionAssignment_2)
{ after(grammarAccess.getTicketCategoryAccess().getDescriptionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TicketCategory__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TicketCategory__Group__3__Impl
	rule__TicketCategory__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TicketCategory__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketCategoryAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getTicketCategoryAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TicketCategory__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TicketCategory__Group__4__Impl
	rule__TicketCategory__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TicketCategory__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketCategoryAccess().getFlowAssignment_4()); }
(rule__TicketCategory__FlowAssignment_4)
{ after(grammarAccess.getTicketCategoryAccess().getFlowAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TicketCategory__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TicketCategory__Group__5__Impl
	rule__TicketCategory__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TicketCategory__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketCategoryAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getTicketCategoryAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TicketCategory__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TicketCategory__Group__6__Impl
	rule__TicketCategory__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TicketCategory__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketCategoryAccess().getFieldsKeyword_6()); }

	'fields {' 

{ after(grammarAccess.getTicketCategoryAccess().getFieldsKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TicketCategory__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TicketCategory__Group__7__Impl
	rule__TicketCategory__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TicketCategory__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketCategoryAccess().getGroup_7()); }
(rule__TicketCategory__Group_7__0)*
{ after(grammarAccess.getTicketCategoryAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TicketCategory__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TicketCategory__Group__8__Impl
	rule__TicketCategory__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__TicketCategory__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketCategoryAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getTicketCategoryAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TicketCategory__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TicketCategory__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TicketCategory__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketCategoryAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getTicketCategoryAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__TicketCategory__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TicketCategory__Group_7__0__Impl
	rule__TicketCategory__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TicketCategory__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketCategoryAccess().getTicketFieldsAssignment_7_0()); }
(rule__TicketCategory__TicketFieldsAssignment_7_0)
{ after(grammarAccess.getTicketCategoryAccess().getTicketFieldsAssignment_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TicketCategory__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TicketCategory__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TicketCategory__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketCategoryAccess().getSemicolonKeyword_7_1()); }

	';' 

{ after(grammarAccess.getTicketCategoryAccess().getSemicolonKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TicketField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TicketField__Group__0__Impl
	rule__TicketField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TicketField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketFieldAccess().getFieldAssignment_0()); }
(rule__TicketField__FieldAssignment_0)
{ after(grammarAccess.getTicketFieldAccess().getFieldAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TicketField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TicketField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TicketField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketFieldAccess().getMandatoryAssignment_1()); }
(rule__TicketField__MandatoryAssignment_1)?
{ after(grammarAccess.getTicketFieldAccess().getMandatoryAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Role__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group__0__Impl
	rule__Role__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getRoleKeyword_0()); }

	'role' 

{ after(grammarAccess.getRoleAccess().getRoleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group__1__Impl
	rule__Role__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getNameAssignment_1()); }
(rule__Role__NameAssignment_1)
{ after(grammarAccess.getRoleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group__2__Impl
	rule__Role__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getDescriptionAssignment_2()); }
(rule__Role__DescriptionAssignment_2)
{ after(grammarAccess.getRoleAccess().getDescriptionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group__3__Impl
	rule__Role__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getRoleAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group__4__Impl
	rule__Role__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getGroup_4()); }
(rule__Role__Group_4__0)*
{ after(grammarAccess.getRoleAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getRoleAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Role__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group_4__0__Impl
	rule__Role__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getRolepermissionsAssignment_4_0()); }
(rule__Role__RolepermissionsAssignment_4_0)
{ after(grammarAccess.getRoleAccess().getRolepermissionsAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getSemicolonKeyword_4_1()); }

	';' 

{ after(grammarAccess.getRoleAccess().getSemicolonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RolePermission__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RolePermission__Group__0__Impl
	rule__RolePermission__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RolePermission__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRolePermissionAccess().getFieldAssignment_0()); }
(rule__RolePermission__FieldAssignment_0)
{ after(grammarAccess.getRolePermissionAccess().getFieldAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RolePermission__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RolePermission__Group__1__Impl
	rule__RolePermission__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RolePermission__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRolePermissionAccess().getPermissionsAssignment_1()); }
(rule__RolePermission__PermissionsAssignment_1)
{ after(grammarAccess.getRolePermissionAccess().getPermissionsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RolePermission__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RolePermission__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RolePermission__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRolePermissionAccess().getGroup_2()); }
(rule__RolePermission__Group_2__0)*
{ after(grammarAccess.getRolePermissionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RolePermission__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RolePermission__Group_2__0__Impl
	rule__RolePermission__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RolePermission__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRolePermissionAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getRolePermissionAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RolePermission__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RolePermission__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RolePermission__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRolePermissionAccess().getPermissionsAssignment_2_1()); }
(rule__RolePermission__PermissionsAssignment_2_1)
{ after(grammarAccess.getRolePermissionAccess().getPermissionsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__TicketSystem__StatesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketSystemAccess().getStatesStateParserRuleCall_0_0()); }
	ruleState{ after(grammarAccess.getTicketSystemAccess().getStatesStateParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TicketSystem__FlowsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketSystemAccess().getFlowsFlowParserRuleCall_1_0()); }
	ruleFlow{ after(grammarAccess.getTicketSystemAccess().getFlowsFlowParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TicketSystem__FieldsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketSystemAccess().getFieldsFieldParserRuleCall_2_0()); }
	ruleField{ after(grammarAccess.getTicketSystemAccess().getFieldsFieldParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TicketSystem__CategoriesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketSystemAccess().getCategoriesTicketCategoryParserRuleCall_3_0()); }
	ruleTicketCategory{ after(grammarAccess.getTicketSystemAccess().getCategoriesTicketCategoryParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TicketSystem__RolesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketSystemAccess().getRolesRoleParserRuleCall_4_0()); }
	ruleRole{ after(grammarAccess.getTicketSystemAccess().getRolesRoleParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getStateAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__DescriptionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getStateAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getFlowAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__StatesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getStatesStateCrossReference_3_0()); }
(
{ before(grammarAccess.getFlowAccess().getStatesStateQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFlowAccess().getStatesStateQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getFlowAccess().getStatesStateCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__StatesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getStatesStateCrossReference_4_1_0()); }
(
{ before(grammarAccess.getFlowAccess().getStatesStateQualifiedNameParserRuleCall_4_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getFlowAccess().getStatesStateQualifiedNameParserRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getFlowAccess().getStatesStateCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getFieldAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__LabelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getFieldAccess().getLabelSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__FieldTypeAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getFieldTypeFieldTypeEnumRuleCall_3_0_0()); }
	ruleFieldType{ after(grammarAccess.getFieldAccess().getFieldTypeFieldTypeEnumRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__FieldEnumAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getFieldEnumEnumParserRuleCall_3_1_0()); }
	ruleEnum{ after(grammarAccess.getFieldAccess().getFieldEnumEnumParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__OptionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getOptionSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getEnumAccess().getOptionSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__OptionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getOptionSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getEnumAccess().getOptionSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TicketCategory__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketCategoryAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getTicketCategoryAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TicketCategory__DescriptionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketCategoryAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getTicketCategoryAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TicketCategory__FlowAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketCategoryAccess().getFlowFlowCrossReference_4_0()); }
(
{ before(grammarAccess.getTicketCategoryAccess().getFlowFlowQualifiedNameParserRuleCall_4_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getTicketCategoryAccess().getFlowFlowQualifiedNameParserRuleCall_4_0_1()); }
)
{ after(grammarAccess.getTicketCategoryAccess().getFlowFlowCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TicketCategory__TicketFieldsAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketCategoryAccess().getTicketFieldsTicketFieldParserRuleCall_7_0_0()); }
	ruleTicketField{ after(grammarAccess.getTicketCategoryAccess().getTicketFieldsTicketFieldParserRuleCall_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TicketField__FieldAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketFieldAccess().getFieldFieldCrossReference_0_0()); }
(
{ before(grammarAccess.getTicketFieldAccess().getFieldFieldQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getTicketFieldAccess().getFieldFieldQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getTicketFieldAccess().getFieldFieldCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TicketField__MandatoryAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTicketFieldAccess().getMandatoryMandatoryKeyword_1_0()); }
(
{ before(grammarAccess.getTicketFieldAccess().getMandatoryMandatoryKeyword_1_0()); }

	'mandatory' 

{ after(grammarAccess.getTicketFieldAccess().getMandatoryMandatoryKeyword_1_0()); }
)

{ after(grammarAccess.getTicketFieldAccess().getMandatoryMandatoryKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Role__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getRoleAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Role__DescriptionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getRoleAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Role__RolepermissionsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getRolepermissionsRolePermissionParserRuleCall_4_0_0()); }
	ruleRolePermission{ after(grammarAccess.getRoleAccess().getRolepermissionsRolePermissionParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RolePermission__FieldAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRolePermissionAccess().getFieldFieldCrossReference_0_0()); }
(
{ before(grammarAccess.getRolePermissionAccess().getFieldFieldQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRolePermissionAccess().getFieldFieldQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRolePermissionAccess().getFieldFieldCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RolePermission__PermissionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRolePermissionAccess().getPermissionsPermissionEnumRuleCall_1_0()); }
	rulePermission{ after(grammarAccess.getRolePermissionAccess().getPermissionsPermissionEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RolePermission__PermissionsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRolePermissionAccess().getPermissionsPermissionEnumRuleCall_2_1_0()); }
	rulePermission{ after(grammarAccess.getRolePermissionAccess().getPermissionsPermissionEnumRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


